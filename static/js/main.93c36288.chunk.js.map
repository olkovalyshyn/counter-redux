{"version":3,"sources":["components/Controls.js","components/Value.js","components/Counter.js","redux/counter/counter-actions.js","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["Controls","step","onIncrement","onDecrement","className","type","onClick","Value","value","connect","state","counterValue","dispatch","payload","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAaeA,G,MAXE,SAAC,GAAD,EAAGC,KAAH,IAASC,EAAT,EAASA,YAAaC,EAAtB,EAAsBA,YAAtB,OACf,sBAAKC,UAAU,oBAAf,UACE,wBAAQC,KAAK,SAASC,QAASH,EAA/B,6EAGA,wBAAQE,KAAK,SAASC,QAASJ,EAA/B,wFCHWK,EAFD,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAAe,sBAAMJ,UAAU,iBAAhB,SAAkCI,KCa/D,IAaeC,eAbS,SAACC,GACvB,MAAO,CACLF,MAAOE,EAAMC,iBAIU,SAACC,GAC1B,MAAO,CACLV,YAAa,kBAAMU,ECvBc,CACnCP,KAAM,oBACNQ,QDqBgD,KAC9CV,YAAa,kBAAMS,ECnBc,CACnCP,KAAM,oBACNQ,QDiBgD,QAInCJ,EAtBf,YAAuD,IAApCD,EAAmC,EAAnCA,MAAON,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,YACrC,OACE,sBAAKC,UAAU,UAAf,UACE,cAAC,EAAD,CAAOI,MAAOA,IACd,cAAC,EAAD,CAAUN,YAAaA,EAAaC,YAAaA,U,MECxCW,MARf,WACE,OACE,qCACE,cAAC,EAAD,IADF,QCOWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCLRQ,EAAe,CACnBb,aAAc,GAsBDc,EAFDC,aAjBE,WAA8C,IAA7ChB,EAA4C,uDAApCc,EAAoC,yCAApBnB,EAAoB,EAApBA,KAAMQ,EAAc,EAAdA,QAC7C,OAAQR,GACN,IAAK,oBACH,MAAO,CACLM,aAAcD,EAAMC,aAAeE,GAGvC,IAAK,oBACH,MAAO,CACLF,aAAcD,EAAMC,aAAeE,GAGvC,QACE,OAAOH,MCVbiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJK,SAASC,eAAe,SAM1BhB,M","file":"static/js/main.93c36288.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Controls = ({ step, onIncrement, onDecrement }) => (\r\n  <div className=\"Counter__controls\">\r\n    <button type=\"button\" onClick={onDecrement}>\r\n      Зменшити на 1\r\n    </button>\r\n    <button type=\"button\" onClick={onIncrement}>\r\n      Збільшити на 1\r\n    </button>\r\n  </div>\r\n);\r\n\r\nexport default Controls;\r\n","import React from \"react\";\r\n\r\nconst Value = ({ value }) => <span className=\"Counter__value\">{value}</span>;\r\n\r\nexport default Value;\r\n","import { connect } from \"react-redux\";\r\n\r\nimport Controls from \"./Controls\";\r\nimport Value from \"./Value\";\r\nimport * as actions from \"../redux/counter/counter-actions\";\r\n\r\nfunction Counter({ value, onIncrement, onDecrement }) {\r\n  return (\r\n    <div className=\"Counter\">\r\n      <Value value={value} />\r\n      <Controls onIncrement={onIncrement} onDecrement={onDecrement} />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    value: state.counterValue,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onIncrement: () => dispatch(actions.increment(1)),\r\n    onDecrement: () => dispatch(actions.decrement(1)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);\r\n","export const increment = (value) => ({\r\n  type: \"counter/Increment\",\r\n  payload: value,\r\n});\r\n\r\nexport const decrement = (value) => ({\r\n  type: \"counter/Decrement\",\r\n  payload: value,\r\n});\r\n","import Counter from \"./components/Counter\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <>\n      <Counter />;\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore } from \"redux\";\r\n\r\nconst initialState = {\r\n  counterValue: 0,\r\n};\r\n\r\nconst reducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case \"counter/Increment\":\r\n      return {\r\n        counterValue: state.counterValue + payload,\r\n      };\r\n\r\n    case \"counter/Decrement\":\r\n      return {\r\n        counterValue: state.counterValue - payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}